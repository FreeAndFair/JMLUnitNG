package org.jmlspecs.jmlunitng;

import java.io.FileNotFoundException;
import java.util.Date;
import java.util.List;

import org.multijava.mjc.CMethod;
import org.multijava.mjc.JCompilationUnitType;
import org.multijava.mjc.JPackageImportType;
import org.multijava.mjc.JTypeDeclarationType;
import org.multijava.mjc.JClassDeclarationType;



/**
 * Generates the JMLUNITNG_Test class by JMLUNITNG framework.
 * The generated class runs unit tests for the class to be
 * tested using JMLUNITNG testing framework.
 * @author Rinkesh Nagmoti
 * @version 1.0
 */
public class JMLUNITNGTestClassGenerator implements Constants{

/** Constructs the JMLUNITNGTestClassGenerator Object.*/
	public JMLUNITNGTestClassGenerator(String file) {
		this.file = file;
		try {
			writer = new Writer(file);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}

/** Calls other methods to generate the Test Class.*/
	public void createTest(JTypeDeclarationType decl, JCompilationUnitType cUnitType){

		printHeaderImportandJavadoc(decl, cUnitType);
		printConstructor();
		createTestMethods(decl, cUnitType);

	}

/** Prints Class header import statements and class Javadoc comment.*/	
	private void printHeaderImportandJavadoc(JTypeDeclarationType decl, JCompilationUnitType cUnitType) {

		this.declarationType = decl;
		this.className = decl.ident() + TEST_CLASS_NAME_POSTFIX;
		pkgs = cUnitType.importedPackages();

		writer.print("This class is generated by JMLUNITNG on " + new Date());
		writer.newLine(2);
		for (int j = 0; j < pkgs.length; j++) {
			writer.print("import " + pkgs[j].getName().replace('/', '.') + ".*;");	
		}


		writer.print("/** This class is the test oracle generated by JMLUNITNG testing framework");
		writer.print(" *  for class " + className);
		writer.print(" */");
		writer.print("/*@Test");
		writer.print("@DataProvider = params" + className);
		writer.print("@*/");
		writer.print("public class " + className + " {");

	}

	/** Prints the constructor of the Test class to be generated.*/
	private void printConstructor() {
		writer.print("/** Constructs the class object.*/");
		writer.print("public " + className+DOT_JAVA + " () {");
		writer.print("}");
	}

	/** Creates and prints the methods generated for Testing the methods.*/
	private void createTestMethods(JTypeDeclarationType decl, JCompilationUnitType cUnitType) {
		Methods mL = new Methods(decl.methods(), decl.getCClass().getAllInheritedMethods());
		List methodsList = mL.getCombinedMethodsList();

		for(int i =0; i<methodsList.size();i++) {
		    MethodToBeTested method = (MethodToBeTested) methodsList.get(i);
		    printMethodJavaDoc(method);
		    String name = generateMethodName(method);
		    writer.print("public void "+ name + "() {");
		    writer.print("}");

		}
	}

	/** Generates the unique names for methods.*/
	private String generateMethodName(MethodToBeTested method) {
		StringBuilder name = new StringBuilder();
		name.append("test");
		Parameter[] pams = method.getParaters();
		for (int i=0; i<pams.length; i++)
			name.append("_" + pams[i]);
		return name.toString();

	}

	/** Prints Javadoc comment for method.*/
	private void printMethodJavaDoc(MethodToBeTested method) {
		writer.print("/** This method is a test for method "+method.getName()+"from the ");
		writer.print(" * Classs to  be tested.");
		writer.print("*/");
	}
	public static void main(String[] args){
		JMLUNITNGTestClassGenerator j = new JMLUNITNGTestClassGenerator("C:\\rinkesh.java");
		//j.createTest();
	}

	//-----------------
	// DATA MEMBERS
	//-----------------
	/** Writer class object to print the Test Class.*/
	private Writer writer;

	/** String representing the file name and location for Test Class.*/
	private String file;

	/** JTypeDeclarationType object which holds information about the class
	 * for which the test is to be conducted.
	 */
	private JTypeDeclarationType declarationType;

	/**
	 * Represents the class name for the Test class to be generated.
	 */
	private String className;

	/**
	 * This array represents the list of imported packages.
	 */
	private JPackageImportType[] pkgs;

	/**
	 * This is the list of all the methods the class to be tested contains.
	 */
	private List methods;
}
