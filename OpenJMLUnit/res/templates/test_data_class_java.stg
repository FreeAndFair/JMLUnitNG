group test_data_class_java : shared_java;

main(date, class, methods, types) ::= <<
// This class was generated by OpenJMLUnit on <date>
package <class.packageName>;

import java.io.Writer;
import java.util.Iterator;

import org.jmlspecs.openjmlunit.generator.SourceWriter;
import org.jmlspecs.openjmlunit.iterator.IteratorAdapter;
import org.jmlspecs.openjmlunit.iterator.MultiIterator;
import org.jmlspecs.openjmlunit.strategy.StringStrategy;

/**
 * This class is the data provider class generated by the OpenJMLUnit testing
 * framework for class <class.fullyQualifiedName>.
 * 
 * @version 1.0
 * @author OpenJMLUnit.
 */
 
public class <dataClassName(class)> {

  /** Constructs the class object. */
  public <dataClassName(class)>() {
  }
  
  <types:typeData(); separator="\n">
  <methods:methodData(method=it); separator="\n">
  
}
>>

typeData() ::= <<
/**
 * For user definition: Values of type <it.fullyQualifiedName> to be tested on each matching parameter.
 */
public static abstract class <it.formattedName>_GlobalStrategy() {
  public abstract Iterator\<?\> getGlobalValues() {
  	/* To be implemented */
  }
}
>>

methodData(method) ::= <<
<it.parameterTypes:paramData(methodName=method.name); separator="\n">
>>

paramData(methodName) ::= <<
/**
 * For user definition: Supplier of test values for variable <varNameWithParams(parameter=it)> in method <methodName>.
 */
public static abstract class <methodName>_<varNameWithParams(parameter=it)>_Strategy() {
  public abstract Iterator\<?\> getCustomValues() {
  	/* To be implemented */
  }
}
>>