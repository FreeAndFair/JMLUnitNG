NAME::
  JMLUnitNG

ARGS::
  Destination:{"-d", "--dest"}:{string}
  TestPackage:{"--test-package"}:{string}
  RACVersion: {"--rac-version"}:{string}
  Files:{}:{file-list}:
    [allowmultiple="true", splitter=" ", mustexist="true", 
     canbedir="true", allowdash="true"]
  Reflection:{"-r", "--reflection"}
  Help:{"-h", "--help"} 
  Deprecation:{"-d", "--deprecation"}
  Verbose: {"-v", "--verbose"}
  Inherited: {"-i", "--inherited"}
  Public: {"--public"}
  Protected: {"--protected"}
  Package: {"--package"}
  Clean: {"--clean"}
  Prune: {"--prune"}
  Classpath: {"-cp", "--classpath"}:{file-list}:
    [allowmultiple="true", splitter=":", mustexist="true",
     mustbedir="true"]
  Specspath: {"-sp", "--specspath"}:{file-list}:
    [allowmultiple="true", splitter=":", mustexist="true",
     mustbedir="true"]

FORMAT::
  Option* Files;   

WHERE::
  Option:  
    Destination|TestPackage|RACVersion|Files|Reflection|Help|Package|
    Deprecation|Verbose|Inherited|Public|Package|Protected|
    Clean|Prune|Classpath|Specpath;

FLY::

OVERRIDES::
  // default is to generate tests for only public methods
  {$(Public?)} -> Public := {true};
  {$(Protected?)} -> Protected := {false};
  {$(Package?)} -> Package := {false};
  
VALIDITY::
  // can't specify a test package if --package or --protected turned on
  {$(Package?) && $(TestPackage?)}:
    "You cannot specify a test package when testing package-level methods.";
  {$(Protected?) && $(TestPackage?)}:
    "You cannot specify a test package when testing protected methods.";
