group help;

help_msg(version) ::= <<

JMLUnitNG - Generate TestNG Classes for JML-Annotated Java

jmlunitng [OPTION] ... path-list

Generates unit tests for all Java source files listed in,  
or recursively contained in directories listed in, path-list. 

-d, --dest [DIRECTORY] : Specify the output directory for 
  generated classes.
-cp \<directory-list\>, --classpath \<directory-list\> : Use the given 
  colon-separated list of directories and Jar files as the classpath 
  during compilation (CLASSPATH environment variable, by default).
-sp \<directory-list\>, --specspath \<directory-list\> : Use the given 
  colon-separated list of directories and Jar files as the specspath 
  during compilation. (SPECSPATH environment variable, by default).
--rac-version \<version-string\> : Generate RAC handling code 
  for the specified JML RAC version; the default value is 'jml4'
  for JML4 RAC. JML2 RAC is supported as well with value 'jml2'.
--reflection : Generate test data reflectively.
--deprecation : Generate tests for deprecated methods.
--inherited : Generate tests for inherited methods.
--public : Generate tests only for public methods (default).
--protected : Generate tests for protected and public methods.
--package : Generate tests for package (no protection modifier), 
  protected and public methods.
--clean : Remove from the destination path all old JMLUnitNG-
  generated files, including any manual modifications. If no 
  destination path is set, all files and directories in path-list
  are cleaned.
--prune : Remove from the destination path any old JMLUnitNG-
  generated files for path-list that do not conform to the current 
  API of the classes under test and the current JMLUnitNG options.
  If no destination path is set, all files and directories in 
  path-list are pruned.
--no-gen : Do not generate tests, use in conjunction with --clean
  or --prune to remove unwanted JMLUnitNG-generated files.
--dry-run : Display status/progress information about the operations 
  that would be performed but do not modify the filesystem.
-v, --verbose : Display status/progress information during test 
  generation.
-h, --help : Display this message.

Version: <version>

>>