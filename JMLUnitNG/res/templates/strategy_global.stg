group test_data_class_java : shared_java;

main(date, class, type, jmlunitng_version) ::= <<
/*
 * Test data strategy for <class.fullyQualifiedName>.
 * Generated by JMLUnitNG <jmlunitng_version>, <date>.
 */
 
package <strategyPackageName(classInfo=class)>;

import org.jmlspecs.jmlunitng.iterator.*;
import org.jmlspecs.jmlunitng.strategy.*;
 
/**
 * Test data strategy for <class.fullyQualifiedName>. Provides
 * global test values for type <type.fullyQualifiedName>.
 * 
 * @author JMLUnitNG <jmlunitng_version>
 * @version <date>
 */
public abstract class <globalStrategyName(typeName=type.formattedName)> 
  extends <baseStrategyMap.(type.fullyQualifiedName)> {
  public RepeatedAccessIterator\<?\> getGlobalValues() {
    return new ObjectArrayIterator\<<typeTransMap.(type.fullyQualifiedName)>\>
    (new <typeTransMap.(type.fullyQualifiedName)>[] 
    { /* add global <type.fullyQualifiedName> values here */ });
  }
  <if(!type.primitive)>
  
  public <globalStrategyName(typeName=type.formattedName)>() {
    super(<type.fullyQualifiedName>.class);
  }
  <endif>
}

>>
